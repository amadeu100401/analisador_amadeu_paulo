2022-09-24 18:06:49:323 grammar LogManager.java:25 before: (COMBINED_GRAMMAR MeAL (RULES (RULE i (BLOCK (ALT Prog) (ALT Decls) (ALT ListDecl) (ALT ListDecl) (ALT DeclTip) (ALT ListId) (ALT Tip) (ALT IDENTIFIER))) (RULE Prog (BLOCK (ALT 'PROGRAM' IDENTIFIER PVIG Decls CmdComp PONTO))) (RULE Decls (BLOCK (ALT ' ') (ALT 'VAR' ListDecl))) (RULE ListDecl (BLOCK (ALT DeclTip) (ALT DeclTip ListDecl))) (RULE DeclTip (BLOCK (ALT ListId DPONTOS Tip PVIG))) (RULE ListId (BLOCK (ALT IDENTIFIER) (ALT IDENTIFIER VIG List Id))) (RULE Tip (BLOCK (ALT INTEIROS) (ALT BOOLEAN) (ALT LETRAS))) (RULE CmdComp (BLOCK (ALT 'BEGIN' ListCmd 'END'))) (RULE ListCmd (BLOCK (ALT Cmd) (ALT Cmd 'PVIG' ListCmd))) (RULE Cmd (BLOCK (ALT CmdIf) (ALT CmdWhile) (ALT CmdRead) (ALT CmdWrite) (ALT CmdAtrib) (ALT CmdAtrib) (ALT CmdComp))) (RULE CmdIf (BLOCK (ALT 'IF' Expr 'THEN' Cmd) (ALT Expr Then Cmd 'ELSE' Cmd))) (RULE CmdWhile (BLOCK (ALT 'WHILE' Expr 'DO' Cmd))) (RULE CmdRead (BLOCK (ALT 'READ' ABPAR ListId FPAR))) (RULE CmdWrite (BLOCK (ALT 'WRITE' ABPAR ListW FPAR))) (RULE ListW (BLOCK (ALT ElemW) (ALT ElemW VIG ListW))) (RULE ElemW (BLOCK (ALT Expr) (ALT IDENTIFIER))) (RULE CmdAtrib (BLOCK (ALT IDENTIFIER ATRIB Expr))) (RULE Expr (BLOCK (ALT INTEIROS OPREL Expr) (ALT INTEIROS OPAD Expr) (ALT INTEIROS) (ALT INTEIROS OPMULT Expr) (ALT ABPAR Expr FPAR))) (RULE Comentario (BLOCK (ALT COMENTARIO LETRAS))) (RULE LETRAS (BLOCK (ALT (* (BLOCK (ALT [aA-zZ])))))) (RULE CTE (BLOCK (ALT (? (BLOCK (ALT OPAD))) (+ (BLOCK (ALT DIGITO))) (? (BLOCK (ALT (+ (BLOCK (ALT DIGITO))))))))) (RULE NUMERO (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE INTEIROS (BLOCK (ALT (? (BLOCK (ALT ['+'|'-']))) (* (BLOCK (ALT [0-9])))))) (RULE IDENTIFIER (BLOCK (ALT (* (BLOCK (ALT [aA-zZ])))) (ALT (* (BLOCK (ALT [aA-zZ]))) (* (BLOCK (ALT [0-9])))))) (RULE BOOLEAN (BLOCK (ALT (? (BLOCK (ALT [0-1])))))) (RULE OPAD (BLOCK (ALT '+') (ALT '-'))) (RULE OPMULT (BLOCK (ALT '*') (ALT '/'))) (RULE OPLOG (BLOCK (ALT 'OR') (ALT 'AND'))) (RULE OPNEG (BLOCK (ALT '~'))) (RULE OPREL (BLOCK (ALT '<') (ALT '<=') (ALT '>') (ALT '>=') (ALT '==') (ALT '<>'))) (RULE PVIG (BLOCK (ALT ';'))) (RULE PONTO (BLOCK (ALT '.'))) (RULE DPONTOS (BLOCK (ALT ':'))) (RULE VIG (BLOCK (ALT ','))) (RULE ABPAR (BLOCK (ALT '('))) (RULE FPAR (BLOCK (ALT ')'))) (RULE ATRIB (BLOCK (ALT ':='))) (RULE RESERVADA (BLOCK (ALT 'PROGRAM') (ALT 'INTEGER') (ALT 'BOOLEAN') (ALT 'BEGIN') (ALT 'END') (ALT 'WHILE') (ALT 'DO') (ALT 'READ') (ALT 'VAR') (ALT 'FALSE') (ALT 'TRUE') (ALT 'WRITE') (ALT 'IF') (ALT 'ELSE'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n ])))) skip))) (RULE COMENTARIO (BLOCK (ALT '//')))))
2022-09-24 18:06:49:337 grammar LogManager.java:25 after: (COMBINED_GRAMMAR MeAL (RULES (RULE i (BLOCK (ALT (SET Prog Decls ListDecl ListDecl DeclTip ListId Tip IDENTIFIER)))) (RULE Prog (BLOCK (ALT 'PROGRAM' IDENTIFIER PVIG Decls CmdComp PONTO))) (RULE Decls (BLOCK (ALT ' ') (ALT 'VAR' ListDecl))) (RULE ListDecl (BLOCK (ALT DeclTip) (ALT DeclTip ListDecl))) (RULE DeclTip (BLOCK (ALT ListId DPONTOS Tip PVIG))) (RULE ListId (BLOCK (ALT IDENTIFIER) (ALT IDENTIFIER VIG List Id))) (RULE Tip (BLOCK (ALT INTEIROS) (ALT BOOLEAN) (ALT LETRAS))) (RULE CmdComp (BLOCK (ALT 'BEGIN' ListCmd 'END'))) (RULE ListCmd (BLOCK (ALT Cmd) (ALT Cmd 'PVIG' ListCmd))) (RULE Cmd (BLOCK (ALT CmdIf) (ALT CmdWhile) (ALT CmdRead) (ALT CmdWrite) (ALT CmdAtrib) (ALT CmdAtrib) (ALT CmdComp))) (RULE CmdIf (BLOCK (ALT 'IF' Expr 'THEN' Cmd) (ALT Expr Then Cmd 'ELSE' Cmd))) (RULE CmdWhile (BLOCK (ALT 'WHILE' Expr 'DO' Cmd))) (RULE CmdRead (BLOCK (ALT 'READ' ABPAR ListId FPAR))) (RULE CmdWrite (BLOCK (ALT 'WRITE' ABPAR ListW FPAR))) (RULE ListW (BLOCK (ALT ElemW) (ALT ElemW VIG ListW))) (RULE ElemW (BLOCK (ALT Expr) (ALT IDENTIFIER))) (RULE CmdAtrib (BLOCK (ALT IDENTIFIER ATRIB Expr))) (RULE Expr (BLOCK (ALT INTEIROS OPREL Expr) (ALT INTEIROS OPAD Expr) (ALT INTEIROS) (ALT INTEIROS OPMULT Expr) (ALT ABPAR Expr FPAR))) (RULE Comentario (BLOCK (ALT COMENTARIO LETRAS))) (RULE LETRAS (BLOCK (ALT (* (BLOCK (ALT [aA-zZ])))))) (RULE CTE (BLOCK (ALT (? (BLOCK (ALT OPAD))) (+ (BLOCK (ALT DIGITO))) (? (BLOCK (ALT (+ (BLOCK (ALT DIGITO))))))))) (RULE NUMERO (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE INTEIROS (BLOCK (ALT (? (BLOCK (ALT ['+'|'-']))) (* (BLOCK (ALT [0-9])))))) (RULE IDENTIFIER (BLOCK (ALT (* (BLOCK (ALT [aA-zZ])))) (ALT (* (BLOCK (ALT [aA-zZ]))) (* (BLOCK (ALT [0-9])))))) (RULE BOOLEAN (BLOCK (ALT (? (BLOCK (ALT [0-1])))))) (RULE OPAD (BLOCK (ALT (SET '+' '-')))) (RULE OPMULT (BLOCK (ALT (SET '*' '/')))) (RULE OPLOG (BLOCK (ALT 'OR') (ALT 'AND'))) (RULE OPNEG (BLOCK (ALT '~'))) (RULE OPREL (BLOCK (ALT '<') (ALT '<=') (ALT '>') (ALT '>=') (ALT '==') (ALT '<>'))) (RULE PVIG (BLOCK (ALT ';'))) (RULE PONTO (BLOCK (ALT '.'))) (RULE DPONTOS (BLOCK (ALT ':'))) (RULE VIG (BLOCK (ALT ','))) (RULE ABPAR (BLOCK (ALT '('))) (RULE FPAR (BLOCK (ALT ')'))) (RULE ATRIB (BLOCK (ALT ':='))) (RULE RESERVADA (BLOCK (ALT 'PROGRAM') (ALT 'INTEGER') (ALT 'BOOLEAN') (ALT 'BEGIN') (ALT 'END') (ALT 'WHILE') (ALT 'DO') (ALT 'READ') (ALT 'VAR') (ALT 'FALSE') (ALT 'TRUE') (ALT 'WRITE') (ALT 'IF') (ALT 'ELSE'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n ])))) skip))) (RULE COMENTARIO (BLOCK (ALT '//')))))
2022-09-24 18:06:49:352 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR MeAL (RULES (RULE i (BLOCK (ALT (SET Prog Decls ListDecl ListDecl DeclTip ListId Tip IDENTIFIER))))))
2022-09-24 18:06:49:352 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR MeALLexer (RULES (RULE Prog (BLOCK (ALT 'PROGRAM' IDENTIFIER PVIG Decls CmdComp PONTO))) (RULE Decls (BLOCK (ALT ' ') (ALT 'VAR' ListDecl))) (RULE ListDecl (BLOCK (ALT DeclTip) (ALT DeclTip ListDecl))) (RULE DeclTip (BLOCK (ALT ListId DPONTOS Tip PVIG))) (RULE ListId (BLOCK (ALT IDENTIFIER) (ALT IDENTIFIER VIG List Id))) (RULE Tip (BLOCK (ALT INTEIROS) (ALT BOOLEAN) (ALT LETRAS))) (RULE CmdComp (BLOCK (ALT 'BEGIN' ListCmd 'END'))) (RULE ListCmd (BLOCK (ALT Cmd) (ALT Cmd 'PVIG' ListCmd))) (RULE Cmd (BLOCK (ALT CmdIf) (ALT CmdWhile) (ALT CmdRead) (ALT CmdWrite) (ALT CmdAtrib) (ALT CmdAtrib) (ALT CmdComp))) (RULE CmdIf (BLOCK (ALT 'IF' Expr 'THEN' Cmd) (ALT Expr Then Cmd 'ELSE' Cmd))) (RULE CmdWhile (BLOCK (ALT 'WHILE' Expr 'DO' Cmd))) (RULE CmdRead (BLOCK (ALT 'READ' ABPAR ListId FPAR))) (RULE CmdWrite (BLOCK (ALT 'WRITE' ABPAR ListW FPAR))) (RULE ListW (BLOCK (ALT ElemW) (ALT ElemW VIG ListW))) (RULE ElemW (BLOCK (ALT Expr) (ALT IDENTIFIER))) (RULE CmdAtrib (BLOCK (ALT IDENTIFIER ATRIB Expr))) (RULE Expr (BLOCK (ALT INTEIROS OPREL Expr) (ALT INTEIROS OPAD Expr) (ALT INTEIROS) (ALT INTEIROS OPMULT Expr) (ALT ABPAR Expr FPAR))) (RULE Comentario (BLOCK (ALT COMENTARIO LETRAS))) (RULE LETRAS (BLOCK (ALT (* (BLOCK (ALT [aA-zZ])))))) (RULE CTE (BLOCK (ALT (? (BLOCK (ALT OPAD))) (+ (BLOCK (ALT DIGITO))) (? (BLOCK (ALT (+ (BLOCK (ALT DIGITO))))))))) (RULE NUMERO (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE INTEIROS (BLOCK (ALT (? (BLOCK (ALT ['+'|'-']))) (* (BLOCK (ALT [0-9])))))) (RULE IDENTIFIER (BLOCK (ALT (* (BLOCK (ALT [aA-zZ])))) (ALT (* (BLOCK (ALT [aA-zZ]))) (* (BLOCK (ALT [0-9])))))) (RULE BOOLEAN (BLOCK (ALT (? (BLOCK (ALT [0-1])))))) (RULE OPAD (BLOCK (ALT (SET '+' '-')))) (RULE OPMULT (BLOCK (ALT (SET '*' '/')))) (RULE OPLOG (BLOCK (ALT 'OR') (ALT 'AND'))) (RULE OPNEG (BLOCK (ALT '~'))) (RULE OPREL (BLOCK (ALT '<') (ALT '<=') (ALT '>') (ALT '>=') (ALT '==') (ALT '<>'))) (RULE PVIG (BLOCK (ALT ';'))) (RULE PONTO (BLOCK (ALT '.'))) (RULE DPONTOS (BLOCK (ALT ':'))) (RULE VIG (BLOCK (ALT ','))) (RULE ABPAR (BLOCK (ALT '('))) (RULE FPAR (BLOCK (ALT ')'))) (RULE ATRIB (BLOCK (ALT ':='))) (RULE RESERVADA (BLOCK (ALT 'PROGRAM') (ALT 'INTEGER') (ALT 'BOOLEAN') (ALT 'BEGIN') (ALT 'END') (ALT 'WHILE') (ALT 'DO') (ALT 'READ') (ALT 'VAR') (ALT 'FALSE') (ALT 'TRUE') (ALT 'WRITE') (ALT 'IF') (ALT 'ELSE'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n ])))) skip))) (RULE COMENTARIO (BLOCK (ALT '//')))))
2022-09-24 18:06:49:374 semantics LogManager.java:25 tokens={EOF=-1, Prog=1, Decls=2, ListDecl=3, DeclTip=4, ListId=5, Tip=6, IDENTIFIER=7}
2022-09-24 18:06:49:374 semantics LogManager.java:25 strings={}
