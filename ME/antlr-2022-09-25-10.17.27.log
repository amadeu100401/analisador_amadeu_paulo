2022-09-25 10:17:26:876 grammar LogManager.java:25 load Lex from MeAL.g4
2022-09-25 10:17:26:880 grammar LogManager.java:25 before: (COMBINED_GRAMMAR MeAL (import Lex) (RULES (RULE prog (BLOCK (ALT 'PROGRAM' IDENTIFIER PVIG Decls CmdComp PONTO))) (RULE cecls (BLOCK (ALT ' ') (ALT 'VAR' ListDecl))) (RULE listDecl (BLOCK (ALT DeclTip) (ALT DeclTip ListDecl))) (RULE declTip (BLOCK (ALT ListId DPONTOS Tip PVIG))) (RULE listId (BLOCK (ALT IDENTIFIER) (ALT IDENTIFIER VIG ListId))) (RULE tip (BLOCK (ALT INTEIROS) (ALT BOOLEAN) (ALT LETRAS))) (RULE cmdComp (BLOCK (ALT 'BEGIN' ListCmd 'END'))) (RULE listCmd (BLOCK (ALT Cmd) (ALT Cmd 'PVIG' ListCmd))) (RULE cmd (BLOCK (ALT CmdIf) (ALT CmdWhile) (ALT CmdRead) (ALT CmdWrite) (ALT CmdAtrib) (ALT cmdAtrib) (ALT CmdComp))) (RULE cmdIf (BLOCK (ALT 'IF' Expr 'THEN' Cmd) (ALT Expr 'Then' Cmd 'ELSE' Cmd))) (RULE cmdWhile (BLOCK (ALT 'WHILE' Expr 'DO' Cmd))) (RULE cmdRead (BLOCK (ALT 'READ' ABPAR ListId FPAR))) (RULE cmdWrite (BLOCK (ALT 'WRITE' ABPAR ListW FPAR))) (RULE listW (BLOCK (ALT ElemW) (ALT ElemW VIG ListW))) (RULE elemW (BLOCK (ALT Expr) (ALT CADEIA))) (RULE cmdAtrib (BLOCK (ALT IDENTIFIER ATRIB Expr))) (RULE expr (BLOCK (ALT INTEIROS OPREL Expr) (ALT INTEIROS OPAD Expr) (ALT INTEIROS) (ALT INTEIROS OPMULT Expr) (ALT ABPAR Expr FPAR) (ALT INTEIROS OPLOG Expr) (ALT IDENTIFIER) (ALT IDENTIFIER OPREL Expr) (ALT IDENTIFIER OPAD Expr) (ALT IDENTIFIER OPMULT Expr) (ALT IDENTIFIER OPLOG Expr))) (RULE comentario (BLOCK (ALT COMENTARIO LETRAS) (ALT COMENTARIO NUMERO) (ALT COMENTARIO LETRAS NUMERO)))))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported actions: []
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE LETRAS (BLOCK (ALT (* (BLOCK (ALT [a-zA-Z]))))))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE CTE (BLOCK (ALT (+ (BLOCK (ALT [0-9])))) (ALT '-' (+ (BLOCK (ALT [0-9]))))))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE NUMERO (BLOCK (ALT (+ (BLOCK (ALT [0-9]))))))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE INTEIROS (BLOCK (ALT (? (BLOCK (ALT '+') (ALT '-'))) (* (BLOCK (ALT [0-9]))))))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE CADEIA (BLOCK (ALT '"' (+ (BLOCK (ALT [a-zA-Z | A-Z | 0-9 | '-' | '_']))) '"')))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE IDENTIFIER (BLOCK (ALT [a-zA-Z] (* (BLOCK (ALT [a-zA-Z0-9]))))))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE BOOLEAN (BLOCK (ALT 'TRUE') (ALT 'FALSE')))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE OPAD (BLOCK (ALT '+') (ALT '-')))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE OPMULT (BLOCK (ALT '*') (ALT '/')))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE OPLOG (BLOCK (ALT 'OR') (ALT 'AND')))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE OPNEG (BLOCK (ALT '~')))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE OPREL (BLOCK (ALT '<') (ALT '<=') (ALT '>') (ALT '>=') (ALT '==') (ALT '<>')))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE PVIG (BLOCK (ALT ';')))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE PONTO (BLOCK (ALT '.')))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE DPONTOS (BLOCK (ALT ':')))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE VIG (BLOCK (ALT ',')))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE ABPAR (BLOCK (ALT '(')))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE FPAR (BLOCK (ALT ')')))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE ATRIB (BLOCK (ALT ':=')))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE RESERVADA (BLOCK (ALT 'PROGRAM') (ALT 'INTEGER') (ALT 'BOOLEAN') (ALT 'BEGIN') (ALT 'END') (ALT 'WHILE') (ALT 'DO') (ALT 'READ') (ALT 'VAR') (ALT 'FALSE') (ALT 'TRUE') (ALT 'WRITE') (ALT 'IF') (ALT 'ELSE')))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [' '|\t|\r|\n])))) skip)))
2022-09-25 10:17:26:882 grammar LogManager.java:25 imported rule: (RULE COMENTARIO (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT (~ (SET [\r\n])))))) skip)))
2022-09-25 10:17:26:883 grammar LogManager.java:25 Grammar: (COMBINED_GRAMMAR MeAL (import Lex) (RULES (RULE prog (BLOCK (ALT 'PROGRAM' IDENTIFIER PVIG Decls CmdComp PONTO))) (RULE cecls (BLOCK (ALT ' ') (ALT 'VAR' ListDecl))) (RULE listDecl (BLOCK (ALT DeclTip) (ALT DeclTip ListDecl))) (RULE declTip (BLOCK (ALT ListId DPONTOS Tip PVIG))) (RULE listId (BLOCK (ALT IDENTIFIER) (ALT IDENTIFIER VIG ListId))) (RULE tip (BLOCK (ALT INTEIROS) (ALT BOOLEAN) (ALT LETRAS))) (RULE cmdComp (BLOCK (ALT 'BEGIN' ListCmd 'END'))) (RULE listCmd (BLOCK (ALT Cmd) (ALT Cmd 'PVIG' ListCmd))) (RULE cmd (BLOCK (ALT CmdIf) (ALT CmdWhile) (ALT CmdRead) (ALT CmdWrite) (ALT CmdAtrib) (ALT cmdAtrib) (ALT CmdComp))) (RULE cmdIf (BLOCK (ALT 'IF' Expr 'THEN' Cmd) (ALT Expr 'Then' Cmd 'ELSE' Cmd))) (RULE cmdWhile (BLOCK (ALT 'WHILE' Expr 'DO' Cmd))) (RULE cmdRead (BLOCK (ALT 'READ' ABPAR ListId FPAR))) (RULE cmdWrite (BLOCK (ALT 'WRITE' ABPAR ListW FPAR))) (RULE listW (BLOCK (ALT ElemW) (ALT ElemW VIG ListW))) (RULE elemW (BLOCK (ALT Expr) (ALT CADEIA))) (RULE cmdAtrib (BLOCK (ALT IDENTIFIER ATRIB Expr))) (RULE expr (BLOCK (ALT INTEIROS OPREL Expr) (ALT INTEIROS OPAD Expr) (ALT INTEIROS) (ALT INTEIROS OPMULT Expr) (ALT ABPAR Expr FPAR) (ALT INTEIROS OPLOG Expr) (ALT IDENTIFIER) (ALT IDENTIFIER OPREL Expr) (ALT IDENTIFIER OPAD Expr) (ALT IDENTIFIER OPMULT Expr) (ALT IDENTIFIER OPLOG Expr))) (RULE comentario (BLOCK (ALT COMENTARIO LETRAS) (ALT COMENTARIO NUMERO) (ALT COMENTARIO LETRAS NUMERO))) (RULE LETRAS (BLOCK (ALT (* (BLOCK (ALT [a-zA-Z])))))) (RULE CTE (BLOCK (ALT (+ (BLOCK (ALT [0-9])))) (ALT '-' (+ (BLOCK (ALT [0-9])))))) (RULE NUMERO (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE INTEIROS (BLOCK (ALT (? (BLOCK (ALT '+') (ALT '-'))) (* (BLOCK (ALT [0-9])))))) (RULE CADEIA (BLOCK (ALT '"' (+ (BLOCK (ALT [a-zA-Z | A-Z | 0-9 | '-' | '_']))) '"'))) (RULE IDENTIFIER (BLOCK (ALT [a-zA-Z] (* (BLOCK (ALT [a-zA-Z0-9])))))) (RULE BOOLEAN (BLOCK (ALT 'TRUE') (ALT 'FALSE'))) (RULE OPAD (BLOCK (ALT '+') (ALT '-'))) (RULE OPMULT (BLOCK (ALT '*') (ALT '/'))) (RULE OPLOG (BLOCK (ALT 'OR') (ALT 'AND'))) (RULE OPNEG (BLOCK (ALT '~'))) (RULE OPREL (BLOCK (ALT '<') (ALT '<=') (ALT '>') (ALT '>=') (ALT '==') (ALT '<>'))) (RULE PVIG (BLOCK (ALT ';'))) (RULE PONTO (BLOCK (ALT '.'))) (RULE DPONTOS (BLOCK (ALT ':'))) (RULE VIG (BLOCK (ALT ','))) (RULE ABPAR (BLOCK (ALT '('))) (RULE FPAR (BLOCK (ALT ')'))) (RULE ATRIB (BLOCK (ALT ':='))) (RULE RESERVADA (BLOCK (ALT 'PROGRAM') (ALT 'INTEGER') (ALT 'BOOLEAN') (ALT 'BEGIN') (ALT 'END') (ALT 'WHILE') (ALT 'DO') (ALT 'READ') (ALT 'VAR') (ALT 'FALSE') (ALT 'TRUE') (ALT 'WRITE') (ALT 'IF') (ALT 'ELSE'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [' '|\t|\r|\n])))) skip))) (RULE COMENTARIO (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT (~ (SET [\r\n])))))) skip)))))
2022-09-25 10:17:26:894 grammar LogManager.java:25 after: (COMBINED_GRAMMAR MeAL (import Lex) (RULES (RULE prog (BLOCK (ALT 'PROGRAM' IDENTIFIER PVIG Decls CmdComp PONTO))) (RULE cecls (BLOCK (ALT ' ') (ALT 'VAR' ListDecl))) (RULE listDecl (BLOCK (ALT DeclTip) (ALT DeclTip ListDecl))) (RULE declTip (BLOCK (ALT ListId DPONTOS Tip PVIG))) (RULE listId (BLOCK (ALT IDENTIFIER) (ALT IDENTIFIER VIG ListId))) (RULE tip (BLOCK (ALT (SET INTEIROS BOOLEAN LETRAS)))) (RULE cmdComp (BLOCK (ALT 'BEGIN' ListCmd 'END'))) (RULE listCmd (BLOCK (ALT Cmd) (ALT Cmd 'PVIG' ListCmd))) (RULE cmd (BLOCK (ALT CmdIf) (ALT CmdWhile) (ALT CmdRead) (ALT CmdWrite) (ALT CmdAtrib) (ALT cmdAtrib) (ALT CmdComp))) (RULE cmdIf (BLOCK (ALT 'IF' Expr 'THEN' Cmd) (ALT Expr 'Then' Cmd 'ELSE' Cmd))) (RULE cmdWhile (BLOCK (ALT 'WHILE' Expr 'DO' Cmd))) (RULE cmdRead (BLOCK (ALT 'READ' ABPAR ListId FPAR))) (RULE cmdWrite (BLOCK (ALT 'WRITE' ABPAR ListW FPAR))) (RULE listW (BLOCK (ALT ElemW) (ALT ElemW VIG ListW))) (RULE elemW (BLOCK (ALT (SET Expr CADEIA)))) (RULE cmdAtrib (BLOCK (ALT IDENTIFIER ATRIB Expr))) (RULE expr (BLOCK (ALT INTEIROS OPREL Expr) (ALT INTEIROS OPAD Expr) (ALT INTEIROS) (ALT INTEIROS OPMULT Expr) (ALT ABPAR Expr FPAR) (ALT INTEIROS OPLOG Expr) (ALT IDENTIFIER) (ALT IDENTIFIER OPREL Expr) (ALT IDENTIFIER OPAD Expr) (ALT IDENTIFIER OPMULT Expr) (ALT IDENTIFIER OPLOG Expr))) (RULE comentario (BLOCK (ALT COMENTARIO LETRAS) (ALT COMENTARIO NUMERO) (ALT COMENTARIO LETRAS NUMERO))) (RULE LETRAS (BLOCK (ALT (* (BLOCK (ALT [a-zA-Z])))))) (RULE CTE (BLOCK (ALT (+ (BLOCK (ALT [0-9])))) (ALT '-' (+ (BLOCK (ALT [0-9])))))) (RULE NUMERO (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE INTEIROS (BLOCK (ALT (? (BLOCK (ALT (SET '+' '-')))) (* (BLOCK (ALT [0-9])))))) (RULE CADEIA (BLOCK (ALT '"' (+ (BLOCK (ALT [a-zA-Z | A-Z | 0-9 | '-' | '_']))) '"'))) (RULE IDENTIFIER (BLOCK (ALT [a-zA-Z] (* (BLOCK (ALT [a-zA-Z0-9])))))) (RULE BOOLEAN (BLOCK (ALT 'TRUE') (ALT 'FALSE'))) (RULE OPAD (BLOCK (ALT (SET '+' '-')))) (RULE OPMULT (BLOCK (ALT (SET '*' '/')))) (RULE OPLOG (BLOCK (ALT 'OR') (ALT 'AND'))) (RULE OPNEG (BLOCK (ALT '~'))) (RULE OPREL (BLOCK (ALT '<') (ALT '<=') (ALT '>') (ALT '>=') (ALT '==') (ALT '<>'))) (RULE PVIG (BLOCK (ALT ';'))) (RULE PONTO (BLOCK (ALT '.'))) (RULE DPONTOS (BLOCK (ALT ':'))) (RULE VIG (BLOCK (ALT ','))) (RULE ABPAR (BLOCK (ALT '('))) (RULE FPAR (BLOCK (ALT ')'))) (RULE ATRIB (BLOCK (ALT ':='))) (RULE RESERVADA (BLOCK (ALT 'PROGRAM') (ALT 'INTEGER') (ALT 'BOOLEAN') (ALT 'BEGIN') (ALT 'END') (ALT 'WHILE') (ALT 'DO') (ALT 'READ') (ALT 'VAR') (ALT 'FALSE') (ALT 'TRUE') (ALT 'WRITE') (ALT 'IF') (ALT 'ELSE'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [' '|\t|\r|\n])))) skip))) (RULE COMENTARIO (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT (~ (SET [\r\n])))))) skip)))))
2022-09-25 10:17:26:906 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR MeAL (import Lex) (RULES (RULE prog (BLOCK (ALT 'PROGRAM' IDENTIFIER PVIG Decls CmdComp PONTO))) (RULE cecls (BLOCK (ALT ' ') (ALT 'VAR' ListDecl))) (RULE listDecl (BLOCK (ALT DeclTip) (ALT DeclTip ListDecl))) (RULE declTip (BLOCK (ALT ListId DPONTOS Tip PVIG))) (RULE listId (BLOCK (ALT IDENTIFIER) (ALT IDENTIFIER VIG ListId))) (RULE tip (BLOCK (ALT (SET INTEIROS BOOLEAN LETRAS)))) (RULE cmdComp (BLOCK (ALT 'BEGIN' ListCmd 'END'))) (RULE listCmd (BLOCK (ALT Cmd) (ALT Cmd 'PVIG' ListCmd))) (RULE cmd (BLOCK (ALT CmdIf) (ALT CmdWhile) (ALT CmdRead) (ALT CmdWrite) (ALT CmdAtrib) (ALT cmdAtrib) (ALT CmdComp))) (RULE cmdIf (BLOCK (ALT 'IF' Expr 'THEN' Cmd) (ALT Expr 'Then' Cmd 'ELSE' Cmd))) (RULE cmdWhile (BLOCK (ALT 'WHILE' Expr 'DO' Cmd))) (RULE cmdRead (BLOCK (ALT 'READ' ABPAR ListId FPAR))) (RULE cmdWrite (BLOCK (ALT 'WRITE' ABPAR ListW FPAR))) (RULE listW (BLOCK (ALT ElemW) (ALT ElemW VIG ListW))) (RULE elemW (BLOCK (ALT (SET Expr CADEIA)))) (RULE cmdAtrib (BLOCK (ALT IDENTIFIER ATRIB Expr))) (RULE expr (BLOCK (ALT INTEIROS OPREL Expr) (ALT INTEIROS OPAD Expr) (ALT INTEIROS) (ALT INTEIROS OPMULT Expr) (ALT ABPAR Expr FPAR) (ALT INTEIROS OPLOG Expr) (ALT IDENTIFIER) (ALT IDENTIFIER OPREL Expr) (ALT IDENTIFIER OPAD Expr) (ALT IDENTIFIER OPMULT Expr) (ALT IDENTIFIER OPLOG Expr))) (RULE comentario (BLOCK (ALT COMENTARIO LETRAS) (ALT COMENTARIO NUMERO) (ALT COMENTARIO LETRAS NUMERO)))))
2022-09-25 10:17:26:907 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR MeALLexer (RULES (RULE T__0 (BLOCK (ALT 'PROGRAM'))) (RULE T__1 (BLOCK (ALT ' '))) (RULE T__2 (BLOCK (ALT 'VAR'))) (RULE T__3 (BLOCK (ALT 'BEGIN'))) (RULE T__4 (BLOCK (ALT 'END'))) (RULE T__5 (BLOCK (ALT 'PVIG'))) (RULE T__6 (BLOCK (ALT 'IF'))) (RULE T__7 (BLOCK (ALT 'THEN'))) (RULE T__8 (BLOCK (ALT 'Then'))) (RULE T__9 (BLOCK (ALT 'ELSE'))) (RULE T__10 (BLOCK (ALT 'WHILE'))) (RULE T__11 (BLOCK (ALT 'DO'))) (RULE T__12 (BLOCK (ALT 'READ'))) (RULE T__13 (BLOCK (ALT 'WRITE'))) (RULE LETRAS (BLOCK (ALT (* (BLOCK (ALT [a-zA-Z])))))) (RULE CTE (BLOCK (ALT (+ (BLOCK (ALT [0-9])))) (ALT '-' (+ (BLOCK (ALT [0-9])))))) (RULE NUMERO (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE INTEIROS (BLOCK (ALT (? (BLOCK (ALT (SET '+' '-')))) (* (BLOCK (ALT [0-9])))))) (RULE CADEIA (BLOCK (ALT '"' (+ (BLOCK (ALT [a-zA-Z | A-Z | 0-9 | '-' | '_']))) '"'))) (RULE IDENTIFIER (BLOCK (ALT [a-zA-Z] (* (BLOCK (ALT [a-zA-Z0-9])))))) (RULE BOOLEAN (BLOCK (ALT 'TRUE') (ALT 'FALSE'))) (RULE OPAD (BLOCK (ALT (SET '+' '-')))) (RULE OPMULT (BLOCK (ALT (SET '*' '/')))) (RULE OPLOG (BLOCK (ALT 'OR') (ALT 'AND'))) (RULE OPNEG (BLOCK (ALT '~'))) (RULE OPREL (BLOCK (ALT '<') (ALT '<=') (ALT '>') (ALT '>=') (ALT '==') (ALT '<>'))) (RULE PVIG (BLOCK (ALT ';'))) (RULE PONTO (BLOCK (ALT '.'))) (RULE DPONTOS (BLOCK (ALT ':'))) (RULE VIG (BLOCK (ALT ','))) (RULE ABPAR (BLOCK (ALT '('))) (RULE FPAR (BLOCK (ALT ')'))) (RULE ATRIB (BLOCK (ALT ':='))) (RULE RESERVADA (BLOCK (ALT 'PROGRAM') (ALT 'INTEGER') (ALT 'BOOLEAN') (ALT 'BEGIN') (ALT 'END') (ALT 'WHILE') (ALT 'DO') (ALT 'READ') (ALT 'VAR') (ALT 'FALSE') (ALT 'TRUE') (ALT 'WRITE') (ALT 'IF') (ALT 'ELSE'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [' '|\t|\r|\n])))) skip))) (RULE COMENTARIO (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT (~ (SET [\r\n])))))) skip)))))
2022-09-25 10:17:27:025 semantics LogManager.java:25 tokens={EOF=-1, T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, LETRAS=15, CTE=16, NUMERO=17, INTEIROS=18, CADEIA=19, IDENTIFIER=20, BOOLEAN=21, OPAD=22, OPMULT=23, OPLOG=24, OPNEG=25, OPREL=26, PVIG=27, PONTO=28, DPONTOS=29, VIG=30, ABPAR=31, FPAR=32, ATRIB=33, RESERVADA=34, WS=35, COMENTARIO=36, Decls=37, CmdComp=38, ListDecl=39, DeclTip=40, ListId=41, Tip=42, ListCmd=43, Cmd=44, CmdIf=45, CmdWhile=46, CmdRead=47, CmdWrite=48, CmdAtrib=49, Expr=50, ListW=51, ElemW=52}
2022-09-25 10:17:27:025 semantics LogManager.java:25 strings={'PROGRAM'=1, ' '=2, 'VAR'=3, 'BEGIN'=4, 'END'=5, 'PVIG'=6, 'IF'=7, 'THEN'=8, 'Then'=9, 'ELSE'=10, 'WHILE'=11, 'DO'=12, 'READ'=13, 'WRITE'=14, '~'=25, ';'=27, '.'=28, ':'=29, ','=30, '('=31, ')'=32, ':='=33}
2022-09-25 10:17:27:028 LL1 LogManager.java:25 
DECISION 0 in rule cecls
2022-09-25 10:17:27:029 LL1 LogManager.java:25 look=[2, 3]
2022-09-25 10:17:27:029 LL1 LogManager.java:25 LL(1)? true
2022-09-25 10:17:27:029 LL1 LogManager.java:25 
DECISION 1 in rule listDecl
2022-09-25 10:17:27:029 LL1 LogManager.java:25 look=[40, 40]
2022-09-25 10:17:27:029 LL1 LogManager.java:25 LL(1)? false
2022-09-25 10:17:27:029 LL1 LogManager.java:25 
DECISION 2 in rule listId
2022-09-25 10:17:27:029 LL1 LogManager.java:25 look=[20, 20]
2022-09-25 10:17:27:029 LL1 LogManager.java:25 LL(1)? false
2022-09-25 10:17:27:029 LL1 LogManager.java:25 
DECISION 3 in rule listCmd
2022-09-25 10:17:27:029 LL1 LogManager.java:25 look=[44, 44]
2022-09-25 10:17:27:029 LL1 LogManager.java:25 LL(1)? false
2022-09-25 10:17:27:029 LL1 LogManager.java:25 
DECISION 4 in rule cmd
2022-09-25 10:17:27:029 LL1 LogManager.java:25 look=[45, 46, 47, 48, 49, 20, 38]
2022-09-25 10:17:27:029 LL1 LogManager.java:25 LL(1)? true
2022-09-25 10:17:27:029 LL1 LogManager.java:25 
DECISION 5 in rule cmdIf
2022-09-25 10:17:27:029 LL1 LogManager.java:25 look=[7, 50]
2022-09-25 10:17:27:029 LL1 LogManager.java:25 LL(1)? true
2022-09-25 10:17:27:029 LL1 LogManager.java:25 
DECISION 6 in rule listW
2022-09-25 10:17:27:029 LL1 LogManager.java:25 look=[52, 52]
2022-09-25 10:17:27:029 LL1 LogManager.java:25 LL(1)? false
2022-09-25 10:17:27:029 LL1 LogManager.java:25 
DECISION 7 in rule expr
2022-09-25 10:17:27:029 LL1 LogManager.java:25 look=[18, 18, 18, 18, 31, 18, 20, 20, 20, 20, 20]
2022-09-25 10:17:27:029 LL1 LogManager.java:25 LL(1)? false
2022-09-25 10:17:27:029 LL1 LogManager.java:25 
DECISION 8 in rule comentario
2022-09-25 10:17:27:029 LL1 LogManager.java:25 look=[36, 36, 36]
2022-09-25 10:17:27:029 LL1 LogManager.java:25 LL(1)? false
