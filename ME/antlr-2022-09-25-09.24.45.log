2022-09-25 09:24:45:561 grammar LogManager.java:25 before: (COMBINED_GRAMMAR MeAL (RULES (RULE i (BLOCK (ALT Expr))) (RULE Prog (BLOCK (ALT 'PROGRAM' IDENTIFIER PVIG Decls CmdComp PONTO))) (RULE Decls (BLOCK (ALT ' ') (ALT 'VAR' ListDecl))) (RULE ListDecl (BLOCK (ALT DeclTip) (ALT DeclTip ListDecl))) (RULE DeclTip (BLOCK (ALT ListId DPONTOS Tip PVIG))) (RULE ListId (BLOCK (ALT IDENTIFIER) (ALT IDENTIFIER VIG ListId))) (RULE Tip (BLOCK (ALT INTEIROS) (ALT BOOLEAN) (ALT LETRAS))) (RULE CmdComp (BLOCK (ALT 'BEGIN' ListCmd 'END'))) (RULE ListCmd (BLOCK (ALT Cmd) (ALT Cmd 'PVIG' ListCmd))) (RULE Cmd (BLOCK (ALT CmdIf) (ALT CmdWhile) (ALT CmdRead) (ALT CmdWrite) (ALT CmdAtrib) (ALT CmdAtrib) (ALT CmdComp))) (RULE CmdIf (BLOCK (ALT 'IF' Expr 'THEN' Cmd) (ALT Expr 'Then' Cmd 'ELSE' Cmd))) (RULE CmdWhile (BLOCK (ALT 'WHILE' Expr 'DO' Cmd))) (RULE CmdRead (BLOCK (ALT 'READ' ABPAR ListId FPAR))) (RULE CmdWrite (BLOCK (ALT 'WRITE' ABPAR ListW FPAR))) (RULE ListW (BLOCK (ALT ElemW) (ALT ElemW VIG ListW))) (RULE ElemW (BLOCK (ALT Expr) (ALT IDENTIFIER))) (RULE CmdAtrib (BLOCK (ALT IDENTIFIER ATRIB Expr))) (RULE Expr (BLOCK (ALT INTEIROS OPREL Expr) (ALT INTEIROS OPAD Expr) (ALT INTEIROS) (ALT INTEIROS OPMULT Expr) (ALT ABPAR Expr FPAR) (ALT INTEIROS OPLOG Expr) (ALT IDENTIFIER) (ALT IDENTIFIER OPREL Expr) (ALT IDENTIFIER OPAD Expr) (ALT IDENTIFIER OPMULT Expr) (ALT IDENTIFIER OPLOG Expr))) (RULE Comentario (BLOCK (ALT COMENTARIO LETRAS) (ALT COMENTARIO NUMERO) (ALT COMENTARIO LETRAS NUMERO))) (RULE LETRAS (BLOCK (ALT (* (BLOCK (ALT [aA-zZ])))))) (RULE CTE (BLOCK (ALT (? (BLOCK (ALT OPAD))) (+ (BLOCK (ALT NUMERO))) (? (BLOCK (ALT (+ (BLOCK (ALT NUMERO))))))))) (RULE NUMERO (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE INTEIROS (BLOCK (ALT (? (BLOCK (ALT '+') (ALT '-'))) (* (BLOCK (ALT [0-9])))))) (RULE IDENTIFIER (BLOCK (ALT (* (BLOCK (ALT [aA-zZ])))) (ALT (* (BLOCK (ALT [aA-zZ]))) (* (BLOCK (ALT [0-9])))))) (RULE BOOLEAN (BLOCK (ALT (? (BLOCK (ALT [0-1])))))) (RULE OPAD (BLOCK (ALT '+') (ALT '-'))) (RULE OPMULT (BLOCK (ALT '*') (ALT '/'))) (RULE OPLOG (BLOCK (ALT 'OR') (ALT 'AND'))) (RULE OPNEG (BLOCK (ALT '~'))) (RULE OPREL (BLOCK (ALT '<') (ALT '<=') (ALT '>') (ALT '>=') (ALT '==') (ALT '<>'))) (RULE PVIG (BLOCK (ALT ';'))) (RULE PONTO (BLOCK (ALT '.'))) (RULE DPONTOS (BLOCK (ALT ':'))) (RULE VIG (BLOCK (ALT ','))) (RULE ABPAR (BLOCK (ALT '('))) (RULE FPAR (BLOCK (ALT ')'))) (RULE ATRIB (BLOCK (ALT ':='))) (RULE RESERVADA (BLOCK (ALT 'PROGRAM') (ALT 'INTEGER') (ALT 'BOOLEAN') (ALT 'BEGIN') (ALT 'END') (ALT 'WHILE') (ALT 'DO') (ALT 'READ') (ALT 'VAR') (ALT 'FALSE') (ALT 'TRUE') (ALT 'WRITE') (ALT 'IF') (ALT 'ELSE'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n ])))) skip))) (RULE COMENTARIO (BLOCK (ALT '//')))))
2022-09-25 09:24:45:573 grammar LogManager.java:25 after: (COMBINED_GRAMMAR MeAL (RULES (RULE i (BLOCK (ALT Expr))) (RULE Prog (BLOCK (ALT 'PROGRAM' IDENTIFIER PVIG Decls CmdComp PONTO))) (RULE Decls (BLOCK (ALT ' ') (ALT 'VAR' ListDecl))) (RULE ListDecl (BLOCK (ALT DeclTip) (ALT DeclTip ListDecl))) (RULE DeclTip (BLOCK (ALT ListId DPONTOS Tip PVIG))) (RULE ListId (BLOCK (ALT IDENTIFIER) (ALT IDENTIFIER VIG ListId))) (RULE Tip (BLOCK (ALT INTEIROS) (ALT BOOLEAN) (ALT LETRAS))) (RULE CmdComp (BLOCK (ALT 'BEGIN' ListCmd 'END'))) (RULE ListCmd (BLOCK (ALT Cmd) (ALT Cmd 'PVIG' ListCmd))) (RULE Cmd (BLOCK (ALT CmdIf) (ALT CmdWhile) (ALT CmdRead) (ALT CmdWrite) (ALT CmdAtrib) (ALT CmdAtrib) (ALT CmdComp))) (RULE CmdIf (BLOCK (ALT 'IF' Expr 'THEN' Cmd) (ALT Expr 'Then' Cmd 'ELSE' Cmd))) (RULE CmdWhile (BLOCK (ALT 'WHILE' Expr 'DO' Cmd))) (RULE CmdRead (BLOCK (ALT 'READ' ABPAR ListId FPAR))) (RULE CmdWrite (BLOCK (ALT 'WRITE' ABPAR ListW FPAR))) (RULE ListW (BLOCK (ALT ElemW) (ALT ElemW VIG ListW))) (RULE ElemW (BLOCK (ALT Expr) (ALT IDENTIFIER))) (RULE CmdAtrib (BLOCK (ALT IDENTIFIER ATRIB Expr))) (RULE Expr (BLOCK (ALT INTEIROS OPREL Expr) (ALT INTEIROS OPAD Expr) (ALT INTEIROS) (ALT INTEIROS OPMULT Expr) (ALT ABPAR Expr FPAR) (ALT INTEIROS OPLOG Expr) (ALT IDENTIFIER) (ALT IDENTIFIER OPREL Expr) (ALT IDENTIFIER OPAD Expr) (ALT IDENTIFIER OPMULT Expr) (ALT IDENTIFIER OPLOG Expr))) (RULE Comentario (BLOCK (ALT COMENTARIO LETRAS) (ALT COMENTARIO NUMERO) (ALT COMENTARIO LETRAS NUMERO))) (RULE LETRAS (BLOCK (ALT (* (BLOCK (ALT [aA-zZ])))))) (RULE CTE (BLOCK (ALT (? (BLOCK (ALT OPAD))) (+ (BLOCK (ALT NUMERO))) (? (BLOCK (ALT (+ (BLOCK (ALT NUMERO))))))))) (RULE NUMERO (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE INTEIROS (BLOCK (ALT (? (BLOCK (ALT (SET '+' '-')))) (* (BLOCK (ALT [0-9])))))) (RULE IDENTIFIER (BLOCK (ALT (* (BLOCK (ALT [aA-zZ])))) (ALT (* (BLOCK (ALT [aA-zZ]))) (* (BLOCK (ALT [0-9])))))) (RULE BOOLEAN (BLOCK (ALT (? (BLOCK (ALT [0-1])))))) (RULE OPAD (BLOCK (ALT (SET '+' '-')))) (RULE OPMULT (BLOCK (ALT (SET '*' '/')))) (RULE OPLOG (BLOCK (ALT 'OR') (ALT 'AND'))) (RULE OPNEG (BLOCK (ALT '~'))) (RULE OPREL (BLOCK (ALT '<') (ALT '<=') (ALT '>') (ALT '>=') (ALT '==') (ALT '<>'))) (RULE PVIG (BLOCK (ALT ';'))) (RULE PONTO (BLOCK (ALT '.'))) (RULE DPONTOS (BLOCK (ALT ':'))) (RULE VIG (BLOCK (ALT ','))) (RULE ABPAR (BLOCK (ALT '('))) (RULE FPAR (BLOCK (ALT ')'))) (RULE ATRIB (BLOCK (ALT ':='))) (RULE RESERVADA (BLOCK (ALT 'PROGRAM') (ALT 'INTEGER') (ALT 'BOOLEAN') (ALT 'BEGIN') (ALT 'END') (ALT 'WHILE') (ALT 'DO') (ALT 'READ') (ALT 'VAR') (ALT 'FALSE') (ALT 'TRUE') (ALT 'WRITE') (ALT 'IF') (ALT 'ELSE'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n ])))) skip))) (RULE COMENTARIO (BLOCK (ALT '//')))))
2022-09-25 09:24:45:585 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR MeAL (RULES (RULE i (BLOCK (ALT Expr)))))
2022-09-25 09:24:45:586 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR MeALLexer (RULES (RULE Prog (BLOCK (ALT 'PROGRAM' IDENTIFIER PVIG Decls CmdComp PONTO))) (RULE Decls (BLOCK (ALT ' ') (ALT 'VAR' ListDecl))) (RULE ListDecl (BLOCK (ALT DeclTip) (ALT DeclTip ListDecl))) (RULE DeclTip (BLOCK (ALT ListId DPONTOS Tip PVIG))) (RULE ListId (BLOCK (ALT IDENTIFIER) (ALT IDENTIFIER VIG ListId))) (RULE Tip (BLOCK (ALT INTEIROS) (ALT BOOLEAN) (ALT LETRAS))) (RULE CmdComp (BLOCK (ALT 'BEGIN' ListCmd 'END'))) (RULE ListCmd (BLOCK (ALT Cmd) (ALT Cmd 'PVIG' ListCmd))) (RULE Cmd (BLOCK (ALT CmdIf) (ALT CmdWhile) (ALT CmdRead) (ALT CmdWrite) (ALT CmdAtrib) (ALT CmdAtrib) (ALT CmdComp))) (RULE CmdIf (BLOCK (ALT 'IF' Expr 'THEN' Cmd) (ALT Expr 'Then' Cmd 'ELSE' Cmd))) (RULE CmdWhile (BLOCK (ALT 'WHILE' Expr 'DO' Cmd))) (RULE CmdRead (BLOCK (ALT 'READ' ABPAR ListId FPAR))) (RULE CmdWrite (BLOCK (ALT 'WRITE' ABPAR ListW FPAR))) (RULE ListW (BLOCK (ALT ElemW) (ALT ElemW VIG ListW))) (RULE ElemW (BLOCK (ALT Expr) (ALT IDENTIFIER))) (RULE CmdAtrib (BLOCK (ALT IDENTIFIER ATRIB Expr))) (RULE Expr (BLOCK (ALT INTEIROS OPREL Expr) (ALT INTEIROS OPAD Expr) (ALT INTEIROS) (ALT INTEIROS OPMULT Expr) (ALT ABPAR Expr FPAR) (ALT INTEIROS OPLOG Expr) (ALT IDENTIFIER) (ALT IDENTIFIER OPREL Expr) (ALT IDENTIFIER OPAD Expr) (ALT IDENTIFIER OPMULT Expr) (ALT IDENTIFIER OPLOG Expr))) (RULE Comentario (BLOCK (ALT COMENTARIO LETRAS) (ALT COMENTARIO NUMERO) (ALT COMENTARIO LETRAS NUMERO))) (RULE LETRAS (BLOCK (ALT (* (BLOCK (ALT [aA-zZ])))))) (RULE CTE (BLOCK (ALT (? (BLOCK (ALT OPAD))) (+ (BLOCK (ALT NUMERO))) (? (BLOCK (ALT (+ (BLOCK (ALT NUMERO))))))))) (RULE NUMERO (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE INTEIROS (BLOCK (ALT (? (BLOCK (ALT (SET '+' '-')))) (* (BLOCK (ALT [0-9])))))) (RULE IDENTIFIER (BLOCK (ALT (* (BLOCK (ALT [aA-zZ])))) (ALT (* (BLOCK (ALT [aA-zZ]))) (* (BLOCK (ALT [0-9])))))) (RULE BOOLEAN (BLOCK (ALT (? (BLOCK (ALT [0-1])))))) (RULE OPAD (BLOCK (ALT (SET '+' '-')))) (RULE OPMULT (BLOCK (ALT (SET '*' '/')))) (RULE OPLOG (BLOCK (ALT 'OR') (ALT 'AND'))) (RULE OPNEG (BLOCK (ALT '~'))) (RULE OPREL (BLOCK (ALT '<') (ALT '<=') (ALT '>') (ALT '>=') (ALT '==') (ALT '<>'))) (RULE PVIG (BLOCK (ALT ';'))) (RULE PONTO (BLOCK (ALT '.'))) (RULE DPONTOS (BLOCK (ALT ':'))) (RULE VIG (BLOCK (ALT ','))) (RULE ABPAR (BLOCK (ALT '('))) (RULE FPAR (BLOCK (ALT ')'))) (RULE ATRIB (BLOCK (ALT ':='))) (RULE RESERVADA (BLOCK (ALT 'PROGRAM') (ALT 'INTEGER') (ALT 'BOOLEAN') (ALT 'BEGIN') (ALT 'END') (ALT 'WHILE') (ALT 'DO') (ALT 'READ') (ALT 'VAR') (ALT 'FALSE') (ALT 'TRUE') (ALT 'WRITE') (ALT 'IF') (ALT 'ELSE'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n ])))) skip))) (RULE COMENTARIO (BLOCK (ALT '//')))))
2022-09-25 09:24:45:714 semantics LogManager.java:25 tokens={EOF=-1, Prog=1, Decls=2, ListDecl=3, DeclTip=4, ListId=5, Tip=6, CmdComp=7, ListCmd=8, Cmd=9, CmdIf=10, CmdWhile=11, CmdRead=12, CmdWrite=13, ListW=14, ElemW=15, CmdAtrib=16, Expr=17, Comentario=18, LETRAS=19, CTE=20, NUMERO=21, INTEIROS=22, IDENTIFIER=23, BOOLEAN=24, OPAD=25, OPMULT=26, OPLOG=27, OPNEG=28, OPREL=29, PVIG=30, PONTO=31, DPONTOS=32, VIG=33, ABPAR=34, FPAR=35, ATRIB=36, RESERVADA=37, WS=38, COMENTARIO=39}
2022-09-25 09:24:45:714 semantics LogManager.java:25 strings={'~'=28, ';'=30, '.'=31, ':'=32, ','=33, '('=34, ')'=35, ':='=36, '//'=39}
